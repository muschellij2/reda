//
// R package reda by Wenjie Wang, Haoda Fu, and Jun Yan
// Copyright (C) 2015-2019
//
// This file is part of the R package reda.
//
// The R package reda is free software: You can redistribute it and/or
// modify it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or any later
// version (at your option). See the GNU General Public License at
// <https://www.gnu.org/licenses/> for details.
//
// The R package reda is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//

// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rrisk_exponential
Rcpp::NumericVector rrisk_exponential(arma::mat z, arma::mat zCoef);
RcppExport SEXP _reda_rrisk_exponential(SEXP zSEXP, SEXP zCoefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type zCoef(zCoefSEXP);
    rcpp_result_gen = Rcpp::wrap(rrisk_exponential(z, zCoef));
    return rcpp_result_gen;
END_RCPP
}
// rrisk_linear
Rcpp::NumericVector rrisk_linear(arma::mat z, arma::mat zCoef);
RcppExport SEXP _reda_rrisk_linear(SEXP zSEXP, SEXP zCoefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type zCoef(zCoefSEXP);
    rcpp_result_gen = Rcpp::wrap(rrisk_linear(z, zCoef));
    return rcpp_result_gen;
END_RCPP
}
// rrisk_excess
Rcpp::NumericVector rrisk_excess(arma::mat z, arma::mat zCoef);
RcppExport SEXP _reda_rrisk_excess(SEXP zSEXP, SEXP zCoefSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type zCoef(zCoefSEXP);
    rcpp_result_gen = Rcpp::wrap(rrisk_excess(z, zCoef));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_reda_rrisk_exponential", (DL_FUNC) &_reda_rrisk_exponential, 2},
    {"_reda_rrisk_linear", (DL_FUNC) &_reda_rrisk_linear, 2},
    {"_reda_rrisk_excess", (DL_FUNC) &_reda_rrisk_excess, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_reda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
